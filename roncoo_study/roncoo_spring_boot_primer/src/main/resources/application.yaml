#自定义配置，注意冒号后的空格
rsb:
  secret: ${random.value}
  number: ${random.int}
  name: www.qq.com
  desc: ${rsb.name} is a domain name

#默认加载classpath:logback-spring.xml
#不要使用logback.xml
#自定义配置
logging:
  config: classpath:logback-spring.xml
  #Spring Boot的Hibernate打印Info信息，无法查看H2数据连接信息
  level:
    org:
      hibernate: DEBUG

#Properties配置多环境，需要添加多个配置文件，YAML只需要一个文件
#YAML不能通过@PropertySource注解加载
#如果需要使用@PropertySource注解加载配置项值，使用Properties

#设置生效的配置文件
#java -jar xxx.jar --spring.profiles.active=dev更加灵活
spring:
  profiles:
    active: dev
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Chongqing
  datasource:
    url: jdbc:mysql://localhost:3306/roncoo_spring_boot_primer?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Pyl123456
    #Spring Boot默认数据源是org.apache.tomcat.jdbc.pool.DataSource
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #初始化连接大小
      initial-size: 8
      #最小空闲连接数
      min-idle: 5
      #最大连接数
      max-active: 10
      #查询超时时间
      query-timeout: 6000
      #事务查询超时时间
      transaction-query-timeout: 6000
      #关闭空闲连接超时时间
      remove-abandoned-timeout: 1800
      filter-class-names: stat
  jpa:
    hibernate:
      #create 先drop已存在的表，再创建1个空表
      #create-drop 应用停止会删除表
      #update 如果表中已存在数据，不会创建新表
      #validate 验证类属性与表字段是否一致
      ddl-auto: update
    show-sql: true
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    pool:
      max-active: 8
      max-idle: 8
      #不指定配置文件启动
      #redis-server &
      #采用默认配置，无密码
      #password:
  activemq:
    in-memory: true
  session:
    store-type: none
      #spring session刷新模式：默认ON_SAVE
    redis:
      flush-mode: ON_SAVE
  #被监控端启动时出现InetAddress.getLocalHost() throws UnknownHostException错误
  #是因为/etc/hosts没配置本机机器名和ip的对应关系
  boot:
    admin:
      client:
        #解决Windows下运行时无法识别主机名的问题
        prefer-ip: true
      #被监控端主动注册向监控端注册的地址
      #如果被监控端使用Spring Cloud向Eureka注册了服务，可以由监控端向Euraka发现并监控这个服务。此方法调试起来比较复杂
      url: http://localhost:64000/sba-monitor

management:
  port: 64001
  security:
    #Spring Boot 1.5.2之后严格执行安全策略，此项配置为false
    enabled: false

#定义各种额外的详情给服务端显示
info:
  app:
    #从pom.xml中获取
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
    spring-boot-version: "@project.parent.properties.spring-boot.version@"

---
spring:
  profiles: dev

server:
  port: 8080

---
spring:
  profiles: test

server:
  port: 8081

---
spring:
  profiles: prod

server:
  port: 8082